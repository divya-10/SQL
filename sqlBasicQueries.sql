--- creating a table name employee with the columns id, name, email, departmrnt, salary
CREATE TABLE EMPLOYEE(
    ID INT NOT NULL PRIMARY KEY,
    NAME VARCHAR(255),
    EMAIL VARCHAR(255),
    DEPARTMENT VARCHAR(225),
    SALARY INT
);

--- select all the columns from the table
SELECT * FROM EMPLOYEE;


--- insert the values into table
INSERT INTO EMPLOYEE (ID, NAME, EMAIL, DEPARTMENT, SALARY) 
VALUES(2, 'PRAVEEN', 'PRAVEEN@GMAIL.COM', 'COMPUTER', 200);

--- select all the columns in the table with employee id = 1 
SELECT * FROM EMPLOYEE WHERE ID = 1;

--- select id and name cloumns from the employee table 
SELECT ID, NAME FROM EMPLOYEE;

--- select id and name cloumns from the employee table with employee name is praveen
SELECT ID, NAME, SALARY FROM EMPLOYEE WHERE NAME = 'PRAVEEN';

--- creating the department tablle with columns names id and name
CREATE TABLE DEPARTMENT(
    ID INT NOT NULL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL
);

--- inserting the values in the department table
INSERT INTO DEPARTMENT ( ID, NAME )
VALUES(2, 'COMPUTER');

----select all the columns from department table
SELECT * FROM DEPARTMENT;

--- altering the employee table to drop the column department
ALTER TABLE EMPLOYEE DROP COLUMN DEPARTMENT;

--- select all the columns to verify department column drop or not
SELECT * FROM EMPLOYEE;

---- altering the employee table to add a column name Department_ID 
ALTER TABLE EMPLOYEE 
ADD DEPARTMENT_ID INT;

----- altering the employee table by adding the foreign key to the department_id column with reference of primary key of the departmant table
ALTER TABLE EMPLOYEE 
ADD FOREIGN KEY (DEPARTMENT_ID)
REFERENCES DEPARTMENT(ID);


SELECT * FROM EMPLOYEE WHERE NAME = 'PRAVEEN';

--- assignig the employee with id 1 to department with id 1
UPDATE EMPLOYEE 
SET DEPARTMENT_ID = 1 WHERE ID = 1;

---- adding more rows to employee table without asssigning them to a department 
INSERT INTO EMPLOYEE (ID, NAME, EMAIL, SALARY, DEPARTMENT_ID)
VALUES (3, 'KUMAR', 'KUMAR@GMAIL.COM', 40000, NULL);

--- assigning employee with id 2 and 3 with dpepartment with id 2
UPDATE EMPLOYEE
SET DEPARTMENT_ID = 2 WHERE ID IN (2,3);

--- joining employee and department tables to diaplay all distinct columns for employee name praveen 
SELECT EMPLOYEE.ID,EMPLOYEE.NAME,EMPLOYEE.EMAIL,EMPLOYEE.SALARY, EMPLOYEE.DEPARTMENT_ID,DEPARTMENT.NAME AS DEPARTMENT_NAME
FROM EMPLOYEE JOIN DEPARTMENT
ON EMPLOYEE.DEPARTMENT_ID = DEPARTMENT.ID
AND EMPLOYEE.NAME = 'PRAVEEN';

SELECT *
FROM EMPLOYEE JOIN DEPARTMENT
ON EMPLOYEE.DEPARTMENT_ID = DEPARTMENT.ID
AND EMPLOYEE.NAME = 'PRAVEEN';

INSERT INTO EMPLOYEE (ID, NAME, EMAIL, SALARY, DEPARTMENT_ID)
VALUES (4, 'SHILPA', 'SHILPA@GMAIL.COM', 500000, NULL);

SELECT * FROM EMPLOYEE;

UPDATE EMPLOYEE 
SET DEPARTMENT_ID = 1 WHERE ID IN(1,4);

SELECT * FROM EMPLOYEE LEFT JOIN DEPARTMENT
ON EMPLOYEE.DEPARTMENT_ID = DEPARTMENT.ID;

INSERT INTO EMPLOYEE (ID, NAME, EMAIL, SALARY)
VALUES (6, 'PRAVEEN REDDY', 'PRAVEENREDDY@GMAIL.COM', 499009);

INSERT INTO DEPARTMENT (ID, NAME)
VALUES (3, 'ELECTRICAL');

INSERT INTO DEPARTMENT(ID, NAME)
VALUES (4, 'TECHNOLOGY');

SELECT * FROM DEPARTMENT;

SELECT EMPLOYEE.ID, EMPLOYEE.NAME, EMPLOYEE.EMAIL, EMPLOYEE.SALARY, EMPLOYEE.DEPARTMENT_ID, DEPARTMENT.NAME AS DEPARTMENT_NAME
FROM EMPLOYEE RIGHT JOIN DEPARTMENT
ON EMPLOYEE.DEPARTMENT_ID = DEPARTMENT.ID

SELECT EMPLOYEE.ID, EMPLOYEE.NAME, EMPLOYEE.EMAIL, EMPLOYEE.SALARY, EMPLOYEE.DEPARTMENT_ID, DEPARTMENT.NAME AS DEPARTMENT_NAME
FROM EMPLOYEE INNER JOIN DEPARTMENT
ON EMPLOYEE.DEPARTMENT_ID = DEPARTMENT.ID;

SELECT EMPLOYEE.ID, EMPLOYEE.NAME, EMPLOYEE.EMAIL, EMPLOYEE.SALARY, EMPLOYEE.DEPARTMENT_ID, DEPARTMENT.NAME AS DEPARTMENT_NAME
FROM EMPLOYEE FULL JOIN DEPARTMENT
ON EMPLOYEE.DEPARTMENT_ID = DEPARTMENT.ID;

SELECT * FROM EMPLOYEE A JOIN EMPLOYEE B
ON A.NAME LIKE B.NAME;

 SELECT EMPLOYEE.NAME, EMPLOYEE.DEPARTMENT_ID FROM EMPLOYEE WHERE EMPLOYEE.DEPARTMENT_ID = 1 
 UNION 
 SELECT EMPLOYEE.NAME, EMPLOYEE.DEPARTMENT_ID FROM EMPLOYEE WHERE EMPLOYEE. DEPARTMENT_ID = 2;
 
 SELECT EMPLOYEE.NAME, EMPLOYEE.DEPARTMENT_ID FROM EMPLOYEE WHERE EMPLOYEE.DEPARTMENT_ID = 1 
 INTERSECT 
 SELECT  EMPLOYEE.NAME, EMPLOYEE.DEPARTMENT_ID FROM EMPLOYEE WHERE EMPLOYEE. DEPARTMENT_ID = 1;
 
 